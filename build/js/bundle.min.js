/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/scripts/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/scripts/index.js":
/*!******************************!*\
  !*** ./src/scripts/index.js ***!
  \******************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _modules_quiz_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/quiz.js */ "./src/scripts/modules/quiz.js");


/***/ }),

/***/ "./src/scripts/modules/quiz.js":
/*!*************************************!*\
  !*** ./src/scripts/modules/quiz.js ***!
  \*************************************/
/*! exports provided: quiz */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quiz", function() { return quiz; });
/*export const quiz = () => {
    const quizInvitationBlock = document.querySelector('.quiz__invitation');
    const startBtn = document.querySelector('.quiz__btn');
    const questions = document.querySelectorAll('.quiz-form__content');
    const nextBtns = document.querySelectorAll('.quiz-form__content .quiz-form__btn');

    let currentQuestion = 0;
    let previousQuestion = null;
    let finalQuestion = questions.length - 1;
    let nextBtn = nextBtns[currentQuestion];

    const showEl = (el) => el.classList.remove('hidden');
    const hideEl = (el) => el.classList.add('hidden');

    let refreshQuizData = () => {
        showEl(quizInvitationBlock);
        hideEl(questions[currentQuestion]);
        currentQuestion = 0;
        previousQuestion = null;
        nextBtn = nextBtns[currentQuestion];
        startBtn.addEventListener('click', startQuiz)
    }

    let endQuiz = () => {
        //modalshow//
        refreshQuizData();
    }

    let showNextQuestion = () => {
        currentQuestion = currentQuestion === finalQuestion ? finalQuestion : currentQuestion + 1;
        previousQuestion = currentQuestion === 0 ? null : currentQuestion - 1;

        hideEl(questions[previousQuestion]);
        showEl(questions[currentQuestion]);

        nextBtn.removeEventListener('click', showNextQuestion);
        nextBtn = nextBtns[currentQuestion];
        
        currentQuestion !== finalQuestion ? nextBtn.addEventListener('click', showNextQuestion) : nextBtn.addEventListener('click', endQuiz);
    }

    const startQuiz = () => {
        hideEl(quizInvitationBlock);
        showEl(questions[currentQuestion]);

        nextBtn.addEventListener('click', showNextQuestion);
        startBtn.removeEventListener('click', startQuiz);
    }

    startBtn.addEventListener('click', startQuiz)
}

quiz();*/
var quiz = function quiz() {
  var quizInvitationBlock = document.querySelector('.quiz__invitation');
  var startBtn = document.querySelector('.quiz__btn');
  var questions = document.querySelectorAll('.quiz-form__content');
  var nextBtns = document.querySelectorAll('.quiz-form__content .quiz-form__btn');
  var submitBtn = document.querySelectorAll('.quiz-form__btn--submit');
  var currentQuestion = 0;
  var previousQuestion = null;
  var finalQuestion = questions.length - 1;
  var nextBtn = nextBtns[currentQuestion];

  var showEl = function showEl(el) {
    el != quizInvitationBlock ? el.style.display = 'flex' : el.style.display = 'grid';
    var posX = -150;
    var timer = setInterval(function () {
      if (posX >= 0) {
        clearInterval(timer);
      }

      el.style.transform = 'translateX(' + posX + '%' + ')';
      posX += 5;
    }, 10);
  };

  var hideEl = function hideEl(el) {
    el.style.display = 'none';
    el.style.transform = 'translateX(-150%)';
  };

  var initApp = function initApp() {
    questions.forEach(function (el, i) {
      el.style.transform = 'translateX(-1000%)';
      el.style.display = 'none';
    });
    startBtn.addEventListener('click', startQuiz);
  };

  var startQuiz = function startQuiz() {
    initApp();
    hideEl(quizInvitationBlock);
    showEl(questions[currentQuestion]);
    nextBtn.addEventListener('click', showNextQuestion);
    startBtn.removeEventListener('click', startQuiz);
  };

  var showNextQuestion = function showNextQuestion() {
    currentQuestion = currentQuestion === finalQuestion ? finalQuestion : currentQuestion + 1;
    previousQuestion = currentQuestion === 0 ? null : currentQuestion - 1;
    hideEl(questions[previousQuestion]);
    showEl(questions[currentQuestion]);
    nextBtn.removeEventListener('click', showNextQuestion);
    nextBtn = nextBtns[currentQuestion];
    currentQuestion !== finalQuestion ? nextBtn.addEventListener('click', showNextQuestion) : nextBtn.addEventListener('click', endQuiz);
  };

  var refreshQuizData = function refreshQuizData() {
    showEl(quizInvitationBlock);
    hideEl(questions[currentQuestion]);
    currentQuestion = 0;
    previousQuestion = null;
    nextBtn = nextBtns[currentQuestion];
    startBtn.addEventListener('click', startQuiz);
  };

  var endQuiz = function endQuiz() {
    //modalshow//
    refreshQuizData();
  };

  initApp();
};
quiz();

/***/ })

/******/ });
//# sourceMappingURL=bundle.min.js.map